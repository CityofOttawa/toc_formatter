<?php

/**
 * @file
 * TOC Formatter module
 */

/**
 * Implements hook_entity_info_alter().
 */
function toc_formatter_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['table of contents'] = array(
    'label' => t('Table of Contents'),
    'custom settings' => TRUE,
  );
}

/** 
 * Implements hook_entity_view().
 */
function toc_formatter_entity_view($entity, $view_mode) {
  var_dump($view_mode);   
  var_dump($entity);
  if ($view_mode == 'table of contents') {
     print_r($entity);
  }
}

/**
 * Parse html looking for heading data
 *
 * @param string $html
 *  HTML document source
 * @param array tags [optional]
 *  List of HTML tags to search for
 * @return array|boolean
 *  Returns an array of heading information, FALSE otherwise.
 */
function toc_formatter_get_headings($html, $tags = array('h1', 'h2', 'h3')) {
  if (empty($tags) or empty($html)) {
    return FALSE;
  }
  
  // Build the xpath predicate
  $query = '//*[';

  foreach ($tags as $tag) {
    $query .= "name()='$tag' or ";
  }
  
  // Remove the last ' or '
  $query = toc_formatter_function_str_lreplace(' or ', '', $query);

  // Cap off the query
  $query .= ']';
  
  // Load the document
  $doc = new DOMDocument();
  @$doc->loadHTML($html);
  $x = new DOMXPath($doc);  

  // @todo retain the hierarchy of the elements

  // Run the query
  $elements = $x->query($query);
  foreach ($elements as $el) {
    $names[$el->nodeName] = array(
      'name' => $el->getAttribute('name'),
      'id' => $el->getAttribute('id'),
      'value' => $el->nodeValue,
    );
  }
  
  return $names;
}

/**
 * Replace last occurence of a string
 * @see str_replace().
 */
function toc_formatter_function_str_lreplace($search, $replace, $subject) {
  $pos = strrpos($subject, $search);

  if($pos !== false) {
    $subject = substr_replace($subject, $replace, $pos, strlen($search));
  }

  return $subject;
}

/**
 * Generate a list of items to be used as a table of contents
 *
 * @see http://stackoverflow.com/questions/8764582/how-can-i-implement-the-multi-level-list-in-drupal7-with-theme-item-list
 */
function toc_formatter_generate_toc($names) {
  $items = array();

  foreach ($names as $name) {
    // Set the fragment value.
    // @see http://stackoverflow.com/questions/484719/html-anchors-with-name-or-id
    if (!empty($name['id'])) {
      $name['fragment'] = $name['id'];      
    }
    elseif (!empty($name['name'])) {
      $name['fragment'] = $name['name'];
    }
    else {
      // Nothing to link to so skip it as a ToC element
      break;
    }
    $items[] = array(
      'data' => l($name['value'], current_path(), array('fragment' => $name['fragment'])),
    );
  }
  
  return theme('item_list', array('items' => $items, 'title' => t('Table of Contents'), 'type' => 'ol', 'attributes' => array('class' => array('toc_formatter'))));
}